{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 41.4115981, u'lng': -71.9759491}, u'southwest': {u'lat': 41.3040961, u'lng': -72.0972209}}, u'viewport': {u'northeast': {u'lat': 41.4115981, u'lng': -71.9759491}, u'southwest': {u'lat': 41.3040961, u'lng': -72.0972209}}, u'location': {u'lat': 41.3517324, u'lng': -72.0349647}}, u'address_components': [{u'long_name': u'06340', u'types': [u'postal_code'], u'short_name': u'06340'}, {u'long_name': u'Groton', u'types': [u'locality', u'political'], u'short_name': u'Groton'}, {u'long_name': u'New London County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'New London County'}, {u'long_name': u'Connecticut', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'CT'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJw1ZA1DYJ5okRbnpNcvivdKI', u'formatted_address': u'Groton, CT 06340, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 41.526747, u'lng': -71.309516}, u'southwest': {u'lat': 41.4994868, u'lng': -71.3355919}}, u'viewport': {u'northeast': {u'lat': 41.526747, u'lng': -71.309516}, u'southwest': {u'lat': 41.4994868, u'lng': -71.3355919}}, u'location': {u'lat': 41.5185929, u'lng': -71.3260243}}, u'address_components': [{u'long_name': u'02841', u'types': [u'postal_code'], u'short_name': u'02841'}, {u'long_name': u'Newport', u'types': [u'locality', u'political'], u'short_name': u'Newport'}, {u'long_name': u'Newport County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Newport County'}, {u'long_name': u'Rhode Island', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'RI'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJpawBKWqv5YkRoz37wglabu4', u'formatted_address': u'Newport, RI 02841, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'postcode_localities': [u'McGuire Air Force Base', u'Trenton'], u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 40.05861489999999, u'lng': -74.5460119}, u'southwest': {u'lat': 39.99261389999999, u'lng': -74.61690709999999}}, u'viewport': {u'northeast': {u'lat': 40.05861489999999, u'lng': -74.5460119}, u'southwest': {u'lat': 39.99261389999999, u'lng': -74.61690709999999}}, u'location': {u'lat': 40.026469, u'lng': -74.5756196}}, u'place_id': u'ChIJvwWkAdBpwYkRE9u48QWJets', u'address_components': [{u'long_name': u'08641', u'types': [u'postal_code'], u'short_name': u'08641'}, {u'long_name': u'Trenton', u'types': [u'locality', u'political'], u'short_name': u'Trenton'}, {u'long_name': u'Burlington County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Burlington County'}, {u'long_name': u'New Jersey', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NJ'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'formatted_address': u'Trenton, NJ 08641, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 42.5830259, u'lng': -71.508535}, u'southwest': {u'lat': 42.5430688, u'lng': -71.6189459}}, u'viewport': {u'northeast': {u'lat': 42.5830259, u'lng': -71.508535}, u'southwest': {u'lat': 42.5430688, u'lng': -71.6189459}}, u'location': {u'lat': 42.56035869999999, u'lng': -71.560526}}, u'address_components': [{u'long_name': u'01432', u'types': [u'postal_code'], u'short_name': u'01432'}, {u'long_name': u'Ayer', u'types': [u'locality', u'political'], u'short_name': u'Ayer'}, {u'long_name': u'Middlesex County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Middlesex County'}, {u'long_name': u'Massachusetts', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'MA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJ-UdhGy2V44kRedwuS757vBg', u'formatted_address': u'Ayer, MA 01432, USA', u'types': [u'postal_code']}]}
{u'status': u'ZERO_RESULTS', u'results': []}
{u'status': u'ZERO_RESULTS', u'results': []}
{u'status': u'ZERO_RESULTS', u'results': []}
{u'status': u'OK', u'results': [{u'postcode_localities': [u'Bedford', u'Hanscom Air Force Base'], u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 42.466712, u'lng': -71.263595}, u'southwest': {u'lat': 42.448953, u'lng': -71.28896999999999}}, u'viewport': {u'northeast': {u'lat': 42.466712, u'lng': -71.263595}, u'southwest': {u'lat': 42.448953, u'lng': -71.28896999999999}}, u'location': {u'lat': 42.4585844, u'lng': -71.2785119}}, u'place_id': u'ChIJ7xkGUwKc44kRdV-FarTzkKU', u'address_components': [{u'long_name': u'01731', u'types': [u'postal_code'], u'short_name': u'01731'}, {u'long_name': u'Hanscom Air Force Base', u'types': [u'locality', u'political'], u'short_name': u'Hanscom AFB'}, {u'long_name': u'Middlesex County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Middlesex County'}, {u'long_name': u'Massachusetts', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'MA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'formatted_address': u'Hanscom AFB, MA 01731, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 42.35801800000001, u'lng': -71.062575}, u'southwest': {u'lat': 42.316016, u'lng': -71.1017701}}, u'viewport': {u'northeast': {u'lat': 42.35801800000001, u'lng': -71.062575}, u'southwest': {u'lat': 42.343184, u'lng': -71.0874449}}, u'location': {u'lat': 42.353068, u'lng': -71.0765188}}, u'address_components': [{u'long_name': u'02116', u'types': [u'postal_code'], u'short_name': u'02116'}, {u'long_name': u'Boston', u'types': [u'locality', u'political'], u'short_name': u'Boston'}, {u'long_name': u'Suffolk County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Suffolk County'}, {u'long_name': u'Massachusetts', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'MA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJxbyObAx644kR5j-mO84Tats', u'formatted_address': u'Boston, MA 02116, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 43.17838, u'lng': -71.4619199}, u'southwest': {u'lat': 43.076406, u'lng': -71.628438}}, u'viewport': {u'northeast': {u'lat': 43.17838, u'lng': -71.4619199}, u'southwest': {u'lat': 43.076406, u'lng': -71.628438}}, u'location': {u'lat': 43.13366329999999, u'lng': -71.5486562}}, u'address_components': [{u'long_name': u'03304', u'types': [u'postal_code'], u'short_name': u'03304'}, {u'long_name': u'Bow', u'types': [u'locality', u'political'], u'short_name': u'Bow'}, {u'long_name': u'Merrimack County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Merrimack County'}, {u'long_name': u'New Hampshire', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NH'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJcyuWscZA4okRHhP2cwbMGbM', u'formatted_address': u'Bow, NH 03304, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'postcode_localities': [u'Gorham', u'Shelburne'], u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 44.5156451, u'lng': -71.012884}, u'southwest': {u'lat': 44.284307, u'lng': -71.2520979}}, u'viewport': {u'northeast': {u'lat': 44.5156451, u'lng': -71.012884}, u'southwest': {u'lat': 44.284307, u'lng': -71.2520979}}, u'location': {u'lat': 44.4176926, u'lng': -71.1354028}}, u'place_id': u'ChIJfW7UWt_ss0wRuu6LEdFAqC0', u'address_components': [{u'long_name': u'03581', u'types': [u'postal_code'], u'short_name': u'03581'}, {u'long_name': u'Gorham', u'types': [u'locality', u'political'], u'short_name': u'Gorham'}, {u'long_name': u'Coos County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Coos County'}, {u'long_name': u'New Hampshire', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NH'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'formatted_address': u'Gorham, NH 03581, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 43.2052759, u'lng': -70.8589011}, u'southwest': {u'lat': 43.1333319, u'lng': -70.99810599999999}}, u'viewport': {u'northeast': {u'lat': 43.2052759, u'lng': -70.8589011}, u'southwest': {u'lat': 43.1333319, u'lng': -70.99810599999999}}, u'location': {u'lat': 43.1751332, u'lng': -70.93684689999999}}, u'address_components': [{u'long_name': u'03823', u'types': [u'postal_code'], u'short_name': u'03823'}, {u'long_name': u'Madbury', u'types': [u'locality', u'political'], u'short_name': u'Madbury'}, {u'long_name': u'Strafford County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Strafford County'}, {u'long_name': u'New Hampshire', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NH'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJw0t1Fl2R4okRLDu3oPe-UeE', u'formatted_address': u'Madbury, NH 03823, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'postcode_localities': [u'Hooksett', u'Manchester'], u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 43.1239469, u'lng': -71.3670779}, u'southwest': {u'lat': 43.0097479, u'lng': -71.5185209}}, u'viewport': {u'northeast': {u'lat': 43.1239469, u'lng': -71.3670779}, u'southwest': {u'lat': 43.0097479, u'lng': -71.5185209}}, u'location': {u'lat': 43.0802842, u'lng': -71.4536835}}, u'place_id': u'ChIJzxVRcU5E4okRFGfI3tnO3QY', u'address_components': [{u'long_name': u'03106', u'types': [u'postal_code'], u'short_name': u'03106'}, {u'long_name': u'Hooksett', u'types': [u'locality', u'political'], u'short_name': u'Hooksett'}, {u'long_name': u'Hooksett', u'types': [u'administrative_area_level_3', u'political'], u'short_name': u'Hooksett'}, {u'long_name': u'Merrimack County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Merrimack County'}, {u'long_name': u'New Hampshire', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NH'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'formatted_address': u'Hooksett, NH 03106, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 40.8412329, u'lng': -74.436791}, u'southwest': {u'lat': 40.805855, u'lng': -74.47443109999999}}, u'viewport': {u'northeast': {u'lat': 40.8412329, u'lng': -74.436791}, u'southwest': {u'lat': 40.805855, u'lng': -74.47443109999999}}, u'location': {u'lat': 40.8236134, u'lng': -74.4554936}}, u'address_components': [{u'long_name': u'07927', u'types': [u'postal_code'], u'short_name': u'07927'}, {u'long_name': u'Cedar Knolls', u'types': [u'neighborhood', u'political'], u'short_name': u'Cedar Knolls'}, {u'long_name': u'Hanover', u'types': [u'locality', u'political'], u'short_name': u'Hanover'}, {u'long_name': u'Morris County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Morris County'}, {u'long_name': u'New Jersey', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NJ'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJr-p33v-mw4kRg3fXk7R5sIs', u'formatted_address': u'Cedar Knolls, NJ 07927, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'postcode_localities': [u'Acushnet', u'New Bedford'], u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 41.7635431, u'lng': -70.857787}, u'southwest': {u'lat': 41.6636029, u'lng': -70.942993}}, u'viewport': {u'northeast': {u'lat': 41.7635431, u'lng': -70.857787}, u'southwest': {u'lat': 41.6636029, u'lng': -70.942993}}, u'location': {u'lat': 41.7223696, u'lng': -70.89523369999999}}, u'place_id': u'ChIJqYnsAALm5IkRL1iSGkZoQKQ', u'address_components': [{u'long_name': u'02743', u'types': [u'postal_code'], u'short_name': u'02743'}, {u'long_name': u'Acushnet', u'types': [u'locality', u'political'], u'short_name': u'Acushnet'}, {u'long_name': u'Bristol County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Bristol County'}, {u'long_name': u'Massachusetts', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'MA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'formatted_address': u'Acushnet, MA 02743, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 42.3478658, u'lng': -71.05904}, u'southwest': {u'lat': 42.3262559, u'lng': -71.088245}}, u'viewport': {u'northeast': {u'lat': 42.3478658, u'lng': -71.05904}, u'southwest': {u'lat': 42.3262559, u'lng': -71.088245}}, u'location': {u'lat': 42.3377967, u'lng': -71.0705763}}, u'address_components': [{u'long_name': u'02118', u'types': [u'postal_code'], u'short_name': u'02118'}, {u'long_name': u'Boston', u'types': [u'locality', u'political'], u'short_name': u'Boston'}, {u'long_name': u'Suffolk County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Suffolk County'}, {u'long_name': u'Massachusetts', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'MA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJwbhr7Wp644kR7FmuHTUleOM', u'formatted_address': u'Boston, MA 02118, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 41.516509, u'lng': -72.73388589999999}, u'southwest': {u'lat': 41.396662, u'lng': -72.886667}}, u'viewport': {u'northeast': {u'lat': 41.516509, u'lng': -72.73388589999999}, u'southwest': {u'lat': 41.396662, u'lng': -72.886667}}, u'location': {u'lat': 41.45930389999999, u'lng': -72.7806422}}, u'address_components': [{u'long_name': u'06492', u'types': [u'postal_code'], u'short_name': u'06492'}, {u'long_name': u'Wallingford', u'types': [u'locality', u'political'], u'short_name': u'Wallingford'}, {u'long_name': u'New Haven County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'New Haven County'}, {u'long_name': u'Connecticut', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'CT'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJE5o4pCDM54kRZ4--rpIehAk', u'formatted_address': u'Wallingford, CT 06492, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 40.169379, u'lng': -74.68263309999999}, u'southwest': {u'lat': 39.9371749, u'lng': -75.0042821}}, u'viewport': {u'northeast': {u'lat': 40.0153441, u'lng': -74.88078}, u'southwest': {u'lat': 39.9371749, u'lng': -75.0042821}}, u'location': {u'lat': 39.9790904, u'lng': -74.9325683}}, u'address_components': [{u'long_name': u'08057', u'types': [u'postal_code'], u'short_name': u'08057'}, {u'long_name': u'Moorestown', u'types': [u'locality', u'political'], u'short_name': u'Moorestown'}, {u'long_name': u'Burlington County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Burlington County'}, {u'long_name': u'New Jersey', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NJ'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJ21UzNZhKwYkRNpIj8_w9e6A', u'formatted_address': u'Moorestown, NJ 08057, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 41.6696529, u'lng': -72.782833}, u'southwest': {u'lat': 41.6116119, u'lng': -72.833691}}, u'viewport': {u'northeast': {u'lat': 41.6696529, u'lng': -72.782833}, u'southwest': {u'lat': 41.6116119, u'lng': -72.833691}}, u'location': {u'lat': 41.6530611, u'lng': -72.8101887}}, u'address_components': [{u'long_name': u'06052', u'types': [u'postal_code'], u'short_name': u'06052'}, {u'long_name': u'New Britain', u'types': [u'locality', u'political'], u'short_name': u'New Britain'}, {u'long_name': u'Hartford County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Hartford County'}, {u'long_name': u'Connecticut', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'CT'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJRw4bAmCx54kRnReEo43FiXA', u'formatted_address': u'New Britain, CT 06052, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'postcode_localities': [u'Brentwood', u'Exeter', u'Kensington'], u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 43.0338601, u'lng': -70.8823826}, u'southwest': {u'lat': 42.8983858, u'lng': -71.0894541}}, u'viewport': {u'northeast': {u'lat': 43.0338601, u'lng': -70.8823826}, u'southwest': {u'lat': 42.8983858, u'lng': -71.0894541}}, u'location': {u'lat': 42.9996568, u'lng': -70.9784562}}, u'place_id': u'ChIJ7UEmuc_v4okRLo9-vdrCNyU', u'address_components': [{u'long_name': u'03833', u'types': [u'postal_code'], u'short_name': u'03833'}, {u'long_name': u'Exeter', u'types': [u'locality', u'political'], u'short_name': u'Exeter'}, {u'long_name': u'Rockingham County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Rockingham County'}, {u'long_name': u'New Hampshire', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NH'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'formatted_address': u'Exeter, NH 03833, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 41.3773931, u'lng': -72.7389891}, u'southwest': {u'lat': 41.305093, u'lng': -72.823843}}, u'viewport': {u'northeast': {u'lat': 41.3773931, u'lng': -72.7389891}, u'southwest': {u'lat': 41.305093, u'lng': -72.823843}}, u'location': {u'lat': 41.327024, u'lng': -72.7747325}}, u'address_components': [{u'long_name': u'06471', u'types': [u'postal_code'], u'short_name': u'06471'}, {u'long_name': u'North Branford', u'types': [u'locality', u'political'], u'short_name': u'North Branford'}, {u'long_name': u'New Haven County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'New Haven County'}, {u'long_name': u'Connecticut', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'CT'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJiTQB3pHT54kRu4iuap_vXIs', u'formatted_address': u'North Branford, CT 06471, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'postcode_localities': [u'Northfield', u'Tilton'], u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 43.502895, u'lng': -71.485264}, u'southwest': {u'lat': 43.3636939, u'lng': -71.651701}}, u'viewport': {u'northeast': {u'lat': 43.502895, u'lng': -71.485264}, u'southwest': {u'lat': 43.3636939, u'lng': -71.651701}}, u'location': {u'lat': 43.4294845, u'lng': -71.5842643}}, u'place_id': u'ChIJpRYoklIL4okRd6WjD0m1Njc', u'address_components': [{u'long_name': u'03276', u'types': [u'postal_code'], u'short_name': u'03276'}, {u'long_name': u'Tilton', u'types': [u'locality', u'political'], u'short_name': u'Tilton'}, {u'long_name': u'New Hampshire', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NH'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'formatted_address': u'Tilton, NH 03276, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 41.003175, u'lng': -74.292442}, u'southwest': {u'lat': 40.982081, u'lng': -74.33217309999999}}, u'viewport': {u'northeast': {u'lat': 41.003175, u'lng': -74.292442}, u'southwest': {u'lat': 40.982081, u'lng': -74.33217309999999}}, u'location': {u'lat': 40.9944769, u'lng': -74.3176876}}, u'address_components': [{u'long_name': u'07457', u'types': [u'postal_code'], u'short_name': u'07457'}, {u'long_name': u'Riverdale', u'types': [u'locality', u'political'], u'short_name': u'Riverdale'}, {u'long_name': u'New Jersey', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NJ'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJ0wlf2akEw4kRnvPjo8MQHyI', u'formatted_address': u'Riverdale, NJ 07457, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 42.531286, u'lng': -71.113484}, u'southwest': {u'lat': 42.4497949, u'lng': -71.2069668}}, u'viewport': {u'northeast': {u'lat': 42.531286, u'lng': -71.113484}, u'southwest': {u'lat': 42.4497949, u'lng': -71.2069668}}, u'location': {u'lat': 42.4884618, u'lng': -71.13296849999999}}, u'address_components': [{u'long_name': u'01801', u'types': [u'postal_code'], u'short_name': u'01801'}, {u'long_name': u'Woburn', u'types': [u'locality', u'political'], u'short_name': u'Woburn'}, {u'long_name': u'Middlesex County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Middlesex County'}, {u'long_name': u'Massachusetts', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'MA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJ6VjTZAZ144kR9nvjmEnyLi0', u'formatted_address': u'Woburn, MA 01801, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location': {u'lat': 42.26, u'lng': -71.8}, u'viewport': {u'northeast': {u'lat': 42.26134898029149, u'lng': -71.7986510197085}, u'southwest': {u'lat': 42.2586510197085, u'lng': -71.80134898029151}}, u'location_type': u'APPROXIMATE'}, u'address_components': [{u'long_name': u'01601', u'types': [u'postal_code'], u'short_name': u'01601'}, {u'long_name': u'Central Business District', u'types': [u'neighborhood', u'political'], u'short_name': u'Central Business District'}, {u'long_name': u'Worcester', u'types': [u'locality', u'political'], u'short_name': u'Worcester'}, {u'long_name': u'Worcester County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Worcester County'}, {u'long_name': u'Massachusetts', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'MA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJ73z9pmYG5IkR3ece-2qpOgU', u'formatted_address': u'Worcester, MA 01601, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 43.7538148, u'lng': -70.311252}, u'southwest': {u'lat': 43.642438, u'lng': -70.39201179999999}}, u'viewport': {u'northeast': {u'lat': 43.7538148, u'lng': -70.311252}, u'southwest': {u'lat': 43.642438, u'lng': -70.39201179999999}}, u'location': {u'lat': 43.7021133, u'lng': -70.3442134}}, u'address_components': [{u'long_name': u'04092', u'types': [u'postal_code'], u'short_name': u'04092'}, {u'long_name': u'Westbrook', u'types': [u'locality', u'political'], u'short_name': u'Westbrook'}, {u'long_name': u'Cumberland County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Cumberland County'}, {u'long_name': u'Maine', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'ME'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJH1kPnQqQskwRxxJKiHvkVuI', u'formatted_address': u'Westbrook, ME 04092, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 40.822629, u'lng': -74.0809319}, u'southwest': {u'lat': 40.778867, u'lng': -74.139967}}, u'viewport': {u'northeast': {u'lat': 40.822629, u'lng': -74.0809319}, u'southwest': {u'lat': 40.778867, u'lng': -74.139967}}, u'location': {u'lat': 40.7972384, u'lng': -74.1063776}}, u'address_components': [{u'long_name': u'07071', u'types': [u'postal_code'], u'short_name': u'07071'}, {u'long_name': u'Lyndhurst', u'types': [u'locality', u'political'], u'short_name': u'Lyndhurst'}, {u'long_name': u'Bergen County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Bergen County'}, {u'long_name': u'New Jersey', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NJ'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJxY7-aQ5WwokR4fuO8ZPaF8g', u'formatted_address': u'Lyndhurst, NJ 07071, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 40.488845, u'lng': -74.3558539}, u'southwest': {u'lat': 40.37110699999999, u'lng': -74.4779301}}, u'viewport': {u'northeast': {u'lat': 40.488845, u'lng': -74.3558539}, u'southwest': {u'lat': 40.37110699999999, u'lng': -74.4779301}}, u'location': {u'lat': 40.4333407, u'lng': -74.41152459999999}}, u'address_components': [{u'long_name': u'08816', u'types': [u'postal_code'], u'short_name': u'08816'}, {u'long_name': u'East Brunswick', u'types': [u'locality', u'political'], u'short_name': u'East Brunswick'}, {u'long_name': u'Middlesex County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Middlesex County'}, {u'long_name': u'New Jersey', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NJ'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJEflR1ITFw4kRzo1rWTbGDoM', u'formatted_address': u'East Brunswick, NJ 08816, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'postcode_localities': [u'Belmar', u'Lake Como', u'Wall Township'], u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 40.376187, u'lng': -74.006481}, u'southwest': {u'lat': 40.1331069, u'lng': -74.20543789999999}}, u'viewport': {u'northeast': {u'lat': 40.200357, u'lng': -74.006481}, u'southwest': {u'lat': 40.1331069, u'lng': -74.15516509999999}}, u'location': {u'lat': 40.1642213, u'lng': -74.0887576}}, u'place_id': u'ChIJ75hve0spwokRwrk-JjRsemU', u'address_components': [{u'long_name': u'07719', u'types': [u'postal_code'], u'short_name': u'07719'}, {u'long_name': u'Belmar', u'types': [u'locality', u'political'], u'short_name': u'Belmar'}, {u'long_name': u'Monmouth County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Monmouth County'}, {u'long_name': u'New Jersey', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NJ'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'formatted_address': u'Belmar, NJ 07719, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'postcode_localities': [u'East Haven', u'New Haven'], u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 41.3284589, u'lng': -72.82263}, u'southwest': {u'lat': 41.2397469, u'lng': -72.911563}}, u'viewport': {u'northeast': {u'lat': 41.3284589, u'lng': -72.82263}, u'southwest': {u'lat': 41.2397469, u'lng': -72.911563}}, u'location': {u'lat': 41.27110200000001, u'lng': -72.88699299999999}}, u'place_id': u'ChIJudMsHrvX54kRGb386iP6VEk', u'address_components': [{u'long_name': u'06512', u'types': [u'postal_code'], u'short_name': u'06512'}, {u'long_name': u'East Haven', u'types': [u'locality', u'political'], u'short_name': u'East Haven'}, {u'long_name': u'New Haven County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'New Haven County'}, {u'long_name': u'Connecticut', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'CT'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'formatted_address': u'East Haven, CT 06512, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 41.793297, u'lng': -71.4765319}, u'southwest': {u'lat': 41.7301659, u'lng': -71.55955999999999}}, u'viewport': {u'northeast': {u'lat': 41.793297, u'lng': -71.4765319}, u'southwest': {u'lat': 41.7301659, u'lng': -71.55955999999999}}, u'location': {u'lat': 41.7691374, u'lng': -71.51304449999999}}, u'address_components': [{u'long_name': u'02921', u'types': [u'postal_code'], u'short_name': u'02921'}, {u'long_name': u'Cranston', u'types': [u'locality', u'political'], u'short_name': u'Cranston'}, {u'long_name': u'Providence County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Providence County'}, {u'long_name': u'Rhode Island', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'RI'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJ_ywnUAtJ5IkRAUPfXnMbE7s', u'formatted_address': u'Cranston, RI 02921, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 41.773911, u'lng': -72.662448}, u'southwest': {u'lat': 41.7574269, u'lng': -72.6845551}}, u'viewport': {u'northeast': {u'lat': 41.773911, u'lng': -72.662448}, u'southwest': {u'lat': 41.7574269, u'lng': -72.6845551}}, u'location': {u'lat': 41.7665502, u'lng': -72.6757236}}, u'address_components': [{u'long_name': u'06103', u'types': [u'postal_code'], u'short_name': u'06103'}, {u'long_name': u'Hartford', u'types': [u'locality', u'political'], u'short_name': u'Hartford'}, {u'long_name': u'Hartford County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Hartford County'}, {u'long_name': u'Connecticut', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'CT'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJ6_d6zmRT5okR2UYAJBbL4P4', u'formatted_address': u'Hartford, CT 06103, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 40.98981209999999, u'lng': -74.5041221}, u'southwest': {u'lat': 40.885738, u'lng': -74.6285279}}, u'viewport': {u'northeast': {u'lat': 40.98981209999999, u'lng': -74.5041221}, u'southwest': {u'lat': 40.885738, u'lng': -74.6285279}}, u'location': {u'lat': 40.8932251, u'lng': -74.5812124}}, u'address_components': [{u'long_name': u'07885', u'types': [u'postal_code'], u'short_name': u'07885'}, {u'long_name': u'Wharton', u'types': [u'locality', u'political'], u'short_name': u'Wharton'}, {u'long_name': u'Morris County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Morris County'}, {u'long_name': u'New Jersey', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NJ'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJ6Rc94QYLw4kRr2-Al-QqED4', u'formatted_address': u'Wharton, NJ 07885, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'postcode_localities': [u'EASTAMPTN Township', u'Eastampton Township', u'Mount Holly', u'Westampton'], u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 40.04418, u'lng': -74.70975}, u'southwest': {u'lat': 39.9745348, u'lng': -74.8724239}}, u'viewport': {u'northeast': {u'lat': 40.04418, u'lng': -74.70975}, u'southwest': {u'lat': 39.9745348, u'lng': -74.8724239}}, u'location': {u'lat': 40.0205975, u'lng': -74.7922202}}, u'place_id': u'ChIJq2cPEItIwYkRF00RrWA3XCg', u'address_components': [{u'long_name': u'08060', u'types': [u'postal_code'], u'short_name': u'08060'}, {u'long_name': u'Mount Holly', u'types': [u'locality', u'political'], u'short_name': u'Mt Holly'}, {u'long_name': u'Burlington County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Burlington County'}, {u'long_name': u'New Jersey', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NJ'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'formatted_address': u'Mt Holly, NJ 08060, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 44.406635, u'lng': -71.7029299}, u'southwest': {u'lat': 44.271248, u'lng': -71.98461689999999}}, u'viewport': {u'northeast': {u'lat': 44.406635, u'lng': -71.7029299}, u'southwest': {u'lat': 44.271248, u'lng': -71.98461689999999}}, u'location': {u'lat': 44.33641069999999, u'lng': -71.7850294}}, u'address_components': [{u'long_name': u'03561', u'types': [u'postal_code'], u'short_name': u'03561'}, {u'long_name': u'Littleton', u'types': [u'locality', u'political'], u'short_name': u'Littleton'}, {u'long_name': u'Grafton County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Grafton County'}, {u'long_name': u'New Hampshire', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NH'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJwycqeA9ptEwRuBWIvRYqEyY', u'formatted_address': u'Littleton, NH 03561, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 42.234651, u'lng': -71.72353489999999}, u'southwest': {u'lat': 42.144928, u'lng': -71.8345721}}, u'viewport': {u'northeast': {u'lat': 42.234651, u'lng': -71.72353489999999}, u'southwest': {u'lat': 42.144928, u'lng': -71.8345721}}, u'location': {u'lat': 42.1805434, u'lng': -71.7978333}}, u'address_components': [{u'long_name': u'01527', u'types': [u'postal_code'], u'short_name': u'01527'}, {u'long_name': u'Millbury', u'types': [u'locality', u'political'], u'short_name': u'Millbury'}, {u'long_name': u'Worcester County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Worcester County'}, {u'long_name': u'Massachusetts', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'MA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJMwWpimUF5IkRazriBrYFM7w', u'formatted_address': u'Millbury, MA 01527, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location': {u'lat': 43.820447, u'lng': -72.2318823}, u'viewport': {u'northeast': {u'lat': 43.8217959802915, u'lng': -72.23053331970848}, u'southwest': {u'lat': 43.81909801970851, u'lng': -72.23323128029149}}, u'location_type': u'APPROXIMATE'}, u'address_components': [{u'long_name': u'05074', u'types': [u'postal_code'], u'short_name': u'05074'}, {u'long_name': u'Thetford', u'types': [u'locality', u'political'], u'short_name': u'Thetford'}, {u'long_name': u'Orange County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Orange County'}, {u'long_name': u'Vermont', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'VT'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJTfOOi_fAtEwR2Z1utAAynZs', u'formatted_address': u'Thetford, VT 05074, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 43.595731, u'lng': -72.9284698}, u'southwest': {u'lat': 43.4845649, u'lng': -73.00932399999999}}, u'viewport': {u'northeast': {u'lat': 43.595731, u'lng': -72.9284698}, u'southwest': {u'lat': 43.4845649, u'lng': -73.00932399999999}}, u'location': {u'lat': 43.5367114, u'lng': -72.9578676}}, u'address_components': [{u'long_name': u'05759', u'types': [u'postal_code'], u'short_name': u'05759'}, {u'long_name': u'North Clarendon', u'types': [u'neighborhood', u'political'], u'short_name': u'North Clarendon'}, {u'long_name': u'Rutland County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Rutland County'}, {u'long_name': u'Vermont', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'VT'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJXXe2pxE74IkRdE6GmI0-bRU', u'formatted_address': u'North Clarendon, VT 05759, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 43.254982, u'lng': -70.820019}, u'southwest': {u'lat': 43.11768199999999, u'lng': -70.9644986}}, u'viewport': {u'northeast': {u'lat': 43.254982, u'lng': -70.820019}, u'southwest': {u'lat': 43.11768199999999, u'lng': -70.9644986}}, u'location': {u'lat': 43.1819713, u'lng': -70.89523369999999}}, u'address_components': [{u'long_name': u'03820', u'types': [u'postal_code'], u'short_name': u'03820'}, {u'long_name': u'Dover', u'types': [u'locality', u'political'], u'short_name': u'Dover'}, {u'long_name': u'Strafford County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Strafford County'}, {u'long_name': u'New Hampshire', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NH'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJPYoxfNOW4okRmAasHqTdt58', u'formatted_address': u'Dover, NH 03820, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 43.19722489999999, u'lng': -70.7331959}, u'southwest': {u'lat': 43.093595, u'lng': -70.83361409999999}}, u'viewport': {u'northeast': {u'lat': 43.19722489999999, u'lng': -70.7331959}, u'southwest': {u'lat': 43.093595, u'lng': -70.83361409999999}}, u'location': {u'lat': 43.1426535, u'lng': -70.7763169}}, u'address_components': [{u'long_name': u'03903', u'types': [u'postal_code'], u'short_name': u'03903'}, {u'long_name': u'Eliot', u'types': [u'locality', u'political'], u'short_name': u'Eliot'}, {u'long_name': u'York County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'York County'}, {u'long_name': u'Maine', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'ME'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJv3D0L8K94okRr72QDbHczyY', u'formatted_address': u'Eliot, ME 03903, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 40.786614, u'lng': -74.0737439}, u'southwest': {u'lat': 40.7159629, u'lng': -74.165018}}, u'viewport': {u'northeast': {u'lat': 40.786614, u'lng': -74.0737439}, u'southwest': {u'lat': 40.7159629, u'lng': -74.165018}}, u'location': {u'lat': 40.7593718, u'lng': -74.1181234}}, u'address_components': [{u'long_name': u'07032', u'types': [u'postal_code'], u'short_name': u'07032'}, {u'long_name': u'Kearny', u'types': [u'locality', u'political'], u'short_name': u'Kearny'}, {u'long_name': u'New Jersey', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NJ'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJixoxJKBWwokRzptuvDmBGMs', u'formatted_address': u'Kearny, NJ 07032, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 39.9403851, u'lng': -74.9660301}, u'southwest': {u'lat': 39.8741939, u'lng': -75.027208}}, u'viewport': {u'northeast': {u'lat': 39.9403851, u'lng': -74.9660301}, u'southwest': {u'lat': 39.8741939, u'lng': -75.027208}}, u'location': {u'lat': 39.9021937, u'lng': -74.9968543}}, u'address_components': [{u'long_name': u'08034', u'types': [u'postal_code'], u'short_name': u'08034'}, {u'long_name': u'Cherry Hill', u'types': [u'locality', u'political'], u'short_name': u'Cherry Hill'}, {u'long_name': u'Camden County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Camden County'}, {u'long_name': u'New Jersey', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NJ'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJD-aapWXLxokR84ebvUhl2t0', u'formatted_address': u'Cherry Hill, NJ 08034, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 41.985495, u'lng': -72.8865579}, u'southwest': {u'lat': 41.8873241, u'lng': -73.053534}}, u'viewport': {u'northeast': {u'lat': 41.985495, u'lng': -72.8865579}, u'southwest': {u'lat': 41.8873241, u'lng': -73.053534}}, u'location': {u'lat': 41.941416, u'lng': -72.9578676}}, u'address_components': [{u'long_name': u'06063', u'types': [u'postal_code'], u'short_name': u'06063'}, {u'long_name': u'Barkhamsted', u'types': [u'locality', u'political'], u'short_name': u'Barkhamsted'}, {u'long_name': u'Connecticut', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'CT'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJlR9XY58J54kRYJwxdZ9r3Ik', u'formatted_address': u'Barkhamsted, CT 06063, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 42.9909229, u'lng': -71.413313}, u'southwest': {u'lat': 42.889586, u'lng': -71.4761111}}, u'viewport': {u'northeast': {u'lat': 42.9909229, u'lng': -71.413313}, u'southwest': {u'lat': 42.889586, u'lng': -71.4761111}}, u'location': {u'lat': 42.9561485, u'lng': -71.4418101}}, u'address_components': [{u'long_name': u'03103', u'types': [u'postal_code'], u'short_name': u'03103'}, {u'long_name': u'Manchester', u'types': [u'locality', u'political'], u'short_name': u'Manchester'}, {u'long_name': u'New Hampshire', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NH'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJLewR2yVM4okRkCCd-TL-d1Y', u'formatted_address': u'Manchester, NH 03103, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'postcode_localities': [u'Saint Johnsbury', u'Waterford'], u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 44.518473, u'lng': -71.8376559}, u'southwest': {u'lat': 44.321784, u'lng': -72.10398599999999}}, u'viewport': {u'northeast': {u'lat': 44.518473, u'lng': -71.8376559}, u'southwest': {u'lat': 44.321784, u'lng': -72.10398599999999}}, u'location': {u'lat': 44.4193374, u'lng': -72.0155425}}, u'place_id': u'ChIJBVlZSlZGtEwRGgeSMdIckQs', u'address_components': [{u'long_name': u'05819', u'types': [u'postal_code'], u'short_name': u'05819'}, {u'long_name': u'Saint Johnsbury', u'types': [u'locality', u'political'], u'short_name': u'St Johnsbury'}, {u'long_name': u'Caledonia County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Caledonia County'}, {u'long_name': u'Vermont', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'VT'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'formatted_address': u'St Johnsbury, VT 05819, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 42.644216, u'lng': -71.6640879}, u'southwest': {u'lat': 42.530351, u'lng': -71.7757419}}, u'viewport': {u'northeast': {u'lat': 42.644216, u'lng': -71.6640879}, u'southwest': {u'lat': 42.530351, u'lng': -71.7757419}}, u'location': {u'lat': 42.5992565, u'lng': -71.7385225}}, u'address_components': [{u'long_name': u'01462', u'types': [u'postal_code'], u'short_name': u'01462'}, {u'long_name': u'Lunenburg', u'types': [u'locality', u'political'], u'short_name': u'Lunenburg'}, {u'long_name': u'Worcester County', u'types': [u'administrative_area_level_2', u'political'], u'short_name': u'Worcester County'}, {u'long_name': u'Massachusetts', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'MA'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'place_id': u'ChIJTTvbMEzo44kRYU14jJrPwBk', u'formatted_address': u'Lunenburg, MA 01462, USA', u'types': [u'postal_code']}]}
{u'status': u'OK', u'results': [{u'postcode_localities': [u'Campton', u'Ellsworth', u'Thornton'], u'geometry': {u'location_type': u'APPROXIMATE', u'bounds': {u'northeast': {u'lat': 43.950942, u'lng': -71.527097}, u'southwest': {u'lat': 43.782379, u'lng': -71.82261900000002}}, u'viewport': {u'northeast': {u'lat': 43.950942, u'lng': -71.527097}, u'southwest': {u'lat': 43.782379, u'lng': -71.82261900000002}}, u'location': {u'lat': 43.8303829, u'lng': -71.69192249999999}}, u'place_id': u'ChIJn7RyQQxks0wRsS36VFgrXo0', u'address_components': [{u'long_name': u'03223', u'types': [u'postal_code'], u'short_name': u'03223'}, {u'long_name': u'Campton', u'types': [u'locality', u'political'], u'short_name': u'Campton'}, {u'long_name': u'New Hampshire', u'types': [u'administrative_area_level_1', u'political'], u'short_name': u'NH'}, {u'long_name': u'United States', u'types': [u'country', u'political'], u'short_name': u'US'}], u'formatted_address': u'Campton, NH 03223, USA', u'types': [u'postal_code']}]}
03301

03220

08701

06107

01702

04332

05071

07306

07442

08618

06018

03301

03220

08701

06107

01702

04332

05071

07306

07442

08618

06018

01841

08880

03784

01540

07701

03431

01701

06001

05033

03801

07094

07073

04091

02347

03269

06605

04330

06111

08223

04937

04090

07650

02121

02762

04274

05472

07201

02343

01238

03302

02886

02898

03901

07871

05495

06053

07305

08037

08016

03835

02920

05641

07512

02769

06050

03576

05825

02038

07621

08753

07075

04275

02190

04426

08724

02201

08050

07727

04901

02125

07430

08232

04922

37762

16876

27828

43125

80211

06790

12521

98570

36560

28206

05678

33839

41255

45338

06520

36513

81413

90001

99611

87313

78227

35566

64461

77027

16121

72932

32903

55412

23323

08752

95113

41824

39736

49007

37880

29570

95076

31553

14080

08608

08829

72751

12184

95358

44634

71358

92834

48125

70520

61358

70615

42024

80022

01474

39813

92591

84128

51542

00716

93309

60035

16835

74104

19034

91453

77003

87104

91453

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'ka oblast", "types": ["administrative_area_level_1", "political"], "short_name":\' at line 1')

66214

92821

08837

74130

01852

18655

30234

28773

38548

08903

37010

33406

78723

98498

18219

96706

34987

26372

36280

24277

34637

82935

05458

02047

45314

13459

79245

24243

26422

33919

92653

73717

60561

56098

47006

42217

06750

84070

02673

38646

60501

30068

83646

45614

78947

33953

19075

59831

39086

35473

31066

06061

95203

62095

85303

15239

01036

75032

33813

81211

79018

14716

17967

45417

18974

78163

92252

17325

13123

67030

82240

46186

45237

67420

17772

37373

44116

95401

12844

00959

03006

23885

07446

39478

63088

81647

43517

05178

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Azur", "types": ["administrative_area_level_1", "political"], "short_name": "Pro\' at line 1')

18083

06042

08302

17344

18013

68660

44837

35229

99603

45846

77464

64840

77023

49238

64089

77009

50666

01571

21550

90211

70454

70533

78390

56560

36375

81040

02722

01518

85719

90303

92630

99001

64014

24707

78569

92359

54436

87072

00791

60061

33136

70083

26437

91942

15071

29038

04037

16823

75949

17015

29205

78934

23321

02045

17555

32804

30546

46310

91502

45322

96817

46323

11230

21904

15555

11238

29607

75020

79932

30678

74940

22610

76531

72210

78722

54915

08081

90274

48205

85048

15717

60085

41263

94591

04105

18446

08012

48042

15656

51551

79007

54961

44404

64156

75125

74561

60469

38702

29831

18935

07417

91792

79778

46151

29123

14855

62865

28801

30039

78332

94304

23690

95655

07017

34747

84064

95133

35950

12165

60415

62274

20710

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s County", "types": ["administrative_area_level_2", "political"], "short_name": \' at line 1')

03611

60477

76092

37052

89113

63401

43529

90232

53821

08052

44670

98121

49224

30417

12466

05655

71209

76137

63087

14803

27824

04240

13364

08046

04912

44904

72384

21793

05656

91024

72857

70450

04424

48165

83626

15209

30622

32814

78119

55363

94044

01049

08882

26105

19010

44708

76106

02559

16354

61277

25070

53002

97526

70669

05670

08069

12762

31020

08247

32442

80925

22644

77486

49241

94514

80246

03253

44430

77363

40311

81023

76016

59866

37350

23150

45133

33904

38487

89101

78542

14068

43754

02476

36505

08810

35620

02304

35452

77590

29452

21783

07827

36110

62260

50166

81019

02532

00602

38570

00729

43359

49445

19963

76678

01380

39097

95304

65810

38261

26138

43203

22150

02459

08341

03465

22720

98116

11706

45672

71047

02251

21638

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s County", "types": ["administrative_area_level_2", "political"], "short_name": \' at line 1')

19492

33760

77995

34212

12072

79416

56244

15089

12037

01983

28527

97219

07732

86426

11096

08344

15626

65340

07602

11757

02633

46402

64012

58575

46016

00617

78873

80116

89429

05045

92782

33140

34103

07042

61081

85083

01626

99129

11561

15212

76450

04512

60070

74641

99357

13438

26451

26230

45356

45889

27243

35211

51006

71639

45426

06033

55041

27924

92627

18458

33606

48380

75230

11978

36043

51342

12076

26571

19930

06901

00773

25061

76112

06840

90604

07733

85706

89121

43974

27839

32168

38139

80014

01514

33433

45327

17560

91453

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'ka oblast", "types": ["administrative_area_level_1", "political"], "short_name":\' at line 1')

05178

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Azur", "types": ["administrative_area_level_1", "political"], "short_name": "Pro\' at line 1')

20710

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s County", "types": ["administrative_area_level_2", "political"], "short_name": \' at line 1')

21638

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s County", "types": ["administrative_area_level_2", "political"], "short_name": \' at line 1')

33573

35184

08101

15229

08043

81418

35171

45658

46349

98847

03883

50543

31063

66202

29487

97834

71971

01200

08349

01743

38562

44645

03136

94063

05855

97225

64439

14544

35055

12432

75127

53115

91335

78840

95946

17859

41159

06076

39337

49410

02706

24230

28209

41543

58545

07756

77320

98038

36054

14204

31738

84521

29576

02791

45405

92865

96130

13078

05048

07480

54002

26757

95070

98361

39561

07731

07090

27604

46327

14301

30506

20629

23032

29805

17052

99110

80513

05052

97524

12950

85629

48857

62263

32207

39153

35907

86335

78344

49047

27816

49415

41030

29130

74128

34428

94553

27857

33184

28781

13320

06256

71403

36507

73075

48109

87499

43107

07465

02466

86504

10926

27330

07550

29020

13301

74801

36079

55007

92672

45743

84522

81063

14770

75414

23181

39336

28392

84513

18062

13054

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Azur", "types": ["administrative_area_level_1", "political"], "short_name": "Pro\' at line 1')

70437

28204

08809

77040

17981

69620

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Oingt", "Le Breuil", "L\\u00e9gny", "L\\u00e9tra", "Oingt", "Saint-V\\u00e9rand", "\' at line 1')

30110

64153

93433

17959

85119

18443

03585

06451

34668

66033

82839

70501

12463

97535

90630

01922

75860

23608

06281

95054

89130

85260

94114

07067

15131

29492

52001

04234

37843

07606

76642

06804

11125

66757

77661

30184

17034

78734

47901

25109

73801

80045

62097

63387

15147

29707

83544

16314

93662

35073

93221

20181

66066

01007

19053

48377

43977

24348

12494

94505

11704

66754

77434

28083

08056

44811

22639

74547

27314

84529

43342

41772

47453

88081

14846

76071

96669

42440

50035

06000

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Azur", "types": ["administrative_area_level_1", "political"], "short_name": "Pro\' at line 1')

48229

75370

83522

66773

29940

07510

10459

34109

16002

08534

85937

33430

06002

03082

04270

11375

46613

56374

74652

08104

49253

63348

17077

61372

40155

45223

79118

36092

71965

92625

24236

76210

78611

73439

85255

95503

63079

65101

37051

35150

31210

12197

22655

07357

67330

61254

07675

80923

19709

98168

30573

36376

77536

78701

84744

18041

61021

53158

51859

42276

08270

58320

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'ka oblast", "types": ["administrative_area_level_1", "political"], "short_name":\' at line 1')

84334

33405

76014

03252

70633

21213

03884

26268

88065

47429

72160

33514

00118

92373

95457

02370

76123

20747

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s County", "types": ["administrative_area_level_2", "political"], "short_name": \' at line 1')

02136

72776

03255

03225

80137

08916

13215

03262

08417

32835

84516

98110

55354

94521

58701

42071

32759

78224

47306

78361

91506

82009

75219

25275

79360

60946

06120

46970

59872

32531

19365

66616

03240

33324

80420

36006

70363

34268

12060

30292

98564

24091

39047

92646

03264

30145

58576

97444

43938

86506

25547

08802

59108

13403

33567

34102

14040

77364

93906

32764

25601

02595

29044

14842

83656

00300

72063

06755

90065

39772

08723

29510

67026

21234

04501

07008

57110

06051

43602

02030

47941

60420

32564

20711

31097

06612

74854

62018

24012

66434

12423

99721

23231

20745

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s County", "types": ["administrative_area_level_2", "political"], "short_name": \' at line 1')

74860

04364

98625

65708

08103

08734

61447

75226

28438

81410

50219

15137

34269

33417

17747

47501

17557

46705

14214

23065

55923

50677

03347

51047

53089

11434

84664

98416

19311

75639

55325

68037

99559

44140

47967

06024

23882

83261

98020

03810

83120

43011

35080

46952

14028

77062

63350

24141

33076

49262

60440

44118

44108

24426

65803

12486

21918

65640

12132

97601

28423

43616

16827

75683

04064

90057

48444

04076

10454

63090

03036

97495

60445

85530

35114

35208

01726

08002

95138

44111

02446

39327

78584

30623

42718

48362

85268

79745

92532

32955

29153

00771

01267

92064

10538

33101

23083

29014

78245

67425

05038

51441

85202

55032

04939

15052

37888

34429

50401

16020

68343

70390

06450

24974

00130

78596

65453

89002

92203

07676

47125

11413

48208

99775

48357

29657

08872

13472

48519

11767

61832

18610

07178

19087

07503

04358

91761

46902

43767

48314

78731

80107

07601

56024

18332

03869

63445

40229

89519

35811

58261

04410

30269

79906

98404

08886

99023

37211

13114

02351

03063

60460

23831

23002

14138

79413

68504

45208

38663

01526

48316

28075

28383

50073

53226

27530

28256

22201

06519

75057

63126

00160

70455

55021

08332

32321

74339

07880

43917

38340

05468

43804

39466

67215

79652

93706

09004

43944

90263

76661

19975

12046

08041

90278

02022

32061

56031

05681

64157

55408

20678

68743

33576

76036

35116

23513

49248

84045

04805

13212

81001

67481

44106

55353

61726

43842

31021

04978

71375

30904

82644

39870

24925

46341

01420

77455

41121

96940

49071

87241

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'kyi district", "types": ["administrative_area_level_2", "political"], "short_nam\' at line 1')

11771

28351

29715

46804

80915

01468

87416

44262

05868

28441

36066

95231

48433

98359

08083

43432

96756

83115

04963

26101

80030

45230

30268

30441

14754

56401

53717

06824

01835

24201

39328

00737

87218

48454

16424

06851

95369

20876

80235

60429

23923

48630

15478

27863

25515

68959

34994

18651

50648

18072

50514

41086

56228

39821

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s\'ka city council", "types": ["administrative_area_level_3", "political"], "shor\' at line 1')

10596

44250

78267

97501

11207

77665

58640

07505

30122

73069

04348

28623

29710

76671

48884

32927

36276

74766

91384

34232

37138

64163

32311

05051

36509

77523

95918

07302

78229

54949

11590

93420

06469

14806

36027

76471

62549

34236

41189

38760

00745

93535

20015

15362

37804

65203

44621

80118

29565

39741

08840

37755

36033

13603

76599

91306

55406

34951

91204

47804

08761

83119

15133

73151

64111

91326

62466

77624

03242

45255

84117

61030

36607

23806

00132

21655

92313

32712

81067

45634

40391

39563

01524

93230

28445

22911

07580

26807

99025

78226

43323

61450

13208

14743

61961

78728

45830

01030

80930

64077

04251

86303

64507

24121

92024

04511

77597

47265

92377

75042

28531

51523

18826

06084

33884

58021

10566

86403

32310

33948

79567

78608

30461

13471

63028

78941

44072

45331

01212

70448

00949

53033

13815

20841

64490

91214

48066

36720

62279

10601

71202

49227

48036

32963

54930

07981

46060

00699

44849

23063

07530

13790

14614

27546

24641

90028

84105

70507

53213

78408

98358

60029

37620

43062

91775

79110

80017

06770

21045

93210

12592

36340

40356

19013

31201

75450

44286

86323

14477

52332

72020

75853

94531

09140

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Oust", "Soueix-Rogalle", "Ustou"], "geometry": {"location_type": "APPROXIMATE", \' at line 1')

04942

04073

76664

79244

30253

17401

19125

07083

32707

01821

02051

24441

36752

79504

54968

01469

17044

60072

33470

06791

63019

04208

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Azur", "types": ["administrative_area_level_1", "political"], "short_name": "Pro\' at line 1')

83837

85743

10069

33954

92503

61571

02186

37085

33890

97144

03188

84622

88045

85701

50048

70062

94070

06489

32605

77420

68118

29676

32346

45171

46507

23124

35176

18433

37727

68007

92307

79412

08400

74082

43025

90260

60171

36756

19536

30721

40347

59748

01038

11360

60446

13131

44854

78209

01463

80734

27957

83868

37641

43332

19038

74945

02917

97452

15860

76452

71901

90503

89118

07449

47401

37680

13214

24366

27292

79119

35121

50619

76903

34771

72846

63074

41201

98042

61416

78341

24323

93635

76643

07100

84097

92113

07882

77598

37191

21013

48604

50554

40351

86432

44505

36749

99134

43758

66540

43145

95928

11967

31102

37087

22960

80835

49506

04553

39079

39150

15610

97229

43158

15851

78336

52216

38049

49417

03057

60202

01234

99701

62201

98569

30205

29338

25607

48015

95129

92602

83234

13748

76180

45880

81005

13052

93505

52227

04473

46580

83271

85355

12817

67170

98661

28019

80442

30350

84757

13363

37841

03226

59715

77640

74063

31793

27017

99181

27760

98403

03861

11752

78112

41572

50651

72023

46814

08088

14462

45831

78104

44841

33579

77024

63055

23237

44718

44055

84536

48383

62054

91766

44057

68661

18465

70346

99032

64128

30558

10039

55912

14006

91803

22611

05734

62380

16651

43755

75862

83320

70001

30273

28377

05849

81630

64080

10710

01735

36855

60020

96795

45745

06335

61938

24104

91202

33907

89011

47032

68102

87107

17957

76579

60970

57252

02105

45827

12775

37877

81641

64444

94112

01439

66060

85043

32059

66409

03216

80403

46208

87418

02149

13156

01037

30529

56372

35072

18370

49319

04290

48892

58853

39767

36544

01907

29150

39042

30257

41810

25160

64640

85334

70665

27013

10523

77476

31806

02779

35976

92582

33770

05654

95237

93454

08013

29468

04579

15017

07726

91354

56367

44260

39120

46737

03827

08420

75472

72081

26215

00739

22572

74855

44614

78202

85745

79601

30093

28138

13425

46260

28435

28624

03054

14305

07077

90221

06010

72002

71008

43140

18976

97329

51002

49631

42713

70785

75424

03016

85930

41059

09227

18078

35677

11777

30540

38460

08004

44824

33646

13501

37406

16735

00424

00186

60953

06339

17268

24817

12763

33135

41604

37921

18063

53228

07653

07711

70515

05821

92386

01259

46783

23936

93263

41622

23662

93523

02790

40324

03303

41256

88063

07600

12406

08094

00926

16123

60914

04263

40977

06330

29334

41260

92583

36263

80807

12589

32832

77630

02747

70663

39145

78733

02240

01833

77468

27573

72113

13035

94111

18914

10036

75231

47550

16936

08720

13036

30525

78203

60403

55405

92082

17866

58040

02171

49777

25159

63012

40504

05447

06028

10901

44125

44067

61283

70394

66524

13166

04605

27712

22041

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s Crossroads", "Falls Church"], "geometry": {"location_type": "APPROXIMATE", "bo\' at line 1')

63147

75928

58035

00250

22654

61272

44287

60103

26714

48340

04291

28398

92025

60712

51351

18074

97364

57201

97426

31951

33477

65686

01256

91356

98087

72855

09200

27504

21050

44667

89108

54563

75752

01854

52753

66423

66013

20861

17251

66853

97007

27865

04811

36017

93260

88337

29431

33403

03470

04462

65624

23055

95987

50557

62354

38863

15926

32462

62218

29403

68901

70582

05616

24322

78215

44720

38449

77807

94565

16421

56276

82431

75240

42345

20851

04233

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Azur", "types": ["administrative_area_level_1", "political"], "short_name": "Pro\' at line 1')

77430

46034

90623

17842

04625

91708

08558

70546

37367

35463

92651

46721

77461

81050

96961

25676

58762

38827

10987

41216

28305

06795

30833

13616

15120

06331

32536

33132

60148

41010

54854

45390

53563

93306

68788

12560

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Olt", "Saint-Saturnin-de-Lenne"], "geometry": {"location_type": "APPROXIMATE", "\' at line 1')

50528

66032

08471

33711

02888

08722

11934

28314

35739

08638

31307

23455

50529

55338

21131

01013

06511

54113

80124

15129

76622

31645

49002

76458

80543

22401

42134

03101

97020

47371

78384

00749

84085

12106

30286

44065

28173

26271

74881

33973

08501

89048

58282

28739

19730

07705

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'kyi district", "types": ["administrative_area_level_2", "political"], "short_nam\' at line 1')

64643

49232

74126

12042

63333

63110

30504

37028

35475

08234

94931

20910

60456

97882

66092

30633

48827

24251

92027

93720

00872

85718

29651

74110

95631

52057

28806

43560

02721

48602

00234

90505

51445

68401

37934

82937

50149

18851

45206

00218

18201

15106

33412

82070

64477

46158

24089

03590

20151

11547

19426

94022

71465

36040

38326

32833

66018

28467

29111

85353

77984

01906

97347

64671

85622

76255

04734

65109

33428

05297

48912

37096

09010

02148

13783

72935

07619

44110

85543

20764

22625

94014

21044

53149

91723

92869

63118

66210

37846

62246

61275

94558

99148

62960

32127

37604

57718

56087

16142

98280

01489

16601

04438

68801

46064

70563

19464

60169

47978

48154

47060

29483

21231

71292

60552

34224

15944

76427

41011

03811

62203

55811

94561

45382

03051

17520

04921

97371

70127

66537

76856

92610

10473

33031

78948

04979

30802

54013

58540

50249

46985

29733

80477

10044

65231

85541

32905

61108

08751

48062

08721

12944

08065

77515

28479

34748

65233

03836

95843

23663

29325

78061

76201

55378

27527

36421

61491

45786

20106

43554

08075

35957

16830

91390

08071

16923

77954

27837

98323

00203

19938

76511

52531

44714

35760

10509

67634

29148

72636

01739

11780

53578

93930

49753

05649

60421

11368

07204

84531

66438

31035

01454

00766

06606

41635

07904

98626

77957

46228

24983

93614

07825

08520

45219

38704

30810

02746

32443

16635

79762

43762

75961

22436

62009

54724

18702

19518

60071

55120

01226

97756

84029

38379

64125

89166

40243

65746

33849

49512

00027

90755

63131

00000

74884

27817

77564

95073

38112

73103

78756

03289

10469

05653

44704

28515

84647

95525

48045

80814

32358

98546

38759

01005

92604

43773

05733

77036

30165

79556

58622

93702

31030

63123

28451

27055

06056

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Azur", "types": ["administrative_area_level_1", "political"], "short_name": "Pro\' at line 1')

87015

07849

29472

28330

21631

51448

73044

18977

10528

07642

93727

27539

17870

29643

88203

37708

08038

08317

97537

66701

90638

01542

94404

36051

33859

27812

26291

43782

10309

85203

33707

03254

89441

42408

81523

31642

01900

77505

63011

54720

04475

08648

25213

73459

74340

21704

11721

01985

71409

19373

86514

97112

00181

01824

39119

19389

30901

51572

12140

17225

90061

18930

62069

51063

48705

85373

15026

51250

24016

18623

95969

41560

02127

29154

25043

06883

48179

74039

72342

59865

43549

33867

14302

68105

80754

05031

77478

09021

68022

08240

25624

60534

64501

44201

46321

39452

32812

35148

21625

77831

92314

10591

07088

44857

43055

68106

60162

16046

44022

30116

72034

46574

59863

30740

06360

80421

03045

07610

30715

32087

18411

39461

19438

39766

48650

51442

30619

22207

02285

06231

83434

02839

30738

78219

02500

13849

16059

70360

98337

03743

20152

17087

37882

62890

61704

49424

06255

05059

56330

65710

96790

08201

41564

21771

31328

07310

05862

40475

72769

91107

08020

75209

81321

36255

64484

28054

74878

37228

96789

39094

65486

16255

36603

72662

39092

78404

22102

43468

01721

43066

75964

12566

39743

15227

84033

61342

92374

22713

69001

08605

58761

91325

43609

27581

38850

23117

84305

85357

60431

02101

54165

25430

43566

02269

64861

20707

32937

10018

45176

35654

30170

48837

16914

70458

14111

33133

44628

28401

33764

89449

21774

21620

07039

04927

01300

28544

11768

18940

73507

30017

68133

02359

59441

49628

64086

92443

70570

00100

21773

02653

47989

85128

71720

61107

03826

77441

21619

11231

90804

60458

16239

51450

83670

44839

60076

03354

45833

01747

94503

93647

27025

28412

03570

59843

29916

32767

49011

12513

21084

32347

54162

96019

63933

07720

55360

49336

15344

36532

22027

62618

34105

45612

30176

08873

43080

18617

06701

51301

48225

33805

06242

32976

96003

38764

53080

71852

54421

60957

91387

73121

60439

04359

45812

16441

36541

38631

63764

62442

34134

34465

81137

80612

25168

01947

18453

41094

63144

04062

45652

02005

73832

52632

66215

98148

26568

62863

87059

13074

62948

61603

03603

20724

29560

37711

05765

64056

11747

02340

32736

22660

39325

01863

07111

55080

25413

00612

23112

55051

82053

01748

50129

19312

49268

15829

24184

28704

44427

32097

03866

14720

93610

33876

61068

61282

75350

28384

06798

62535

32159

12051

13417

95627

46393

30656

36575

94801

01208

03506

41257

23236

03279

80864

66835

60119

63146

37878

53103

07332

03900

47638

92647

50230

12064

33317

76641

56338

85284

84643

54234

29564

05602

39837

46037

14820

79703

36046

68030

82609

49070

33436

47561

95236

95446

17086

58722

06417

28360

45805

90606

01938

38754

31620

08853

01510

99167

30238

41332

48064

32697

17938

37336

41615

01969

28306

22701

58075

02812

26619

89440

47715

97205

36866

99124

57701

28411

35578

35673

06057

11581

37394

63117

66109

71653

37830

36530

12581

75831

60419

56052

84606

46112

93726

60531

13904

13072

27962

42204

06756

45014

33138

10590

01744

02453

08010

94555

05650

28115

70576

07737

43017

07977

29316

17508

50072

37811

93219

04258

29322

48177

27248

91453

05178

20710

21638

13054

69620

06000

58320

20747

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s County", "types": ["administrative_area_level_2", "political"], "short_name": \' at line 1')

20745

91453

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'ka oblast", "types": ["administrative_area_level_1", "political"], "short_name":\' at line 1')

05178

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Azur", "types": ["administrative_area_level_1", "political"], "short_name": "Pro\' at line 1')

20710

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s County", "types": ["administrative_area_level_2", "political"], "short_name": \' at line 1')

21638

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s County", "types": ["administrative_area_level_2", "political"], "short_name": \' at line 1')

13054

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Azur", "types": ["administrative_area_level_1", "political"], "short_name": "Pro\' at line 1')

69620

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Oingt", "Le Breuil", "L\\u00e9gny", "L\\u00e9tra", "Oingt", "Saint-V\\u00e9rand", "\' at line 1')

06000

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Azur", "types": ["administrative_area_level_1", "political"], "short_name": "Pro\' at line 1')

58320

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'ka oblast", "types": ["administrative_area_level_1", "political"], "short_name":\' at line 1')

20747

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s County", "types": ["administrative_area_level_2", "political"], "short_name": \' at line 1')

20745

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s County", "types": ["administrative_area_level_2", "political"], "short_name": \' at line 1')

87241

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'kyi district", "types": ["administrative_area_level_2", "political"], "short_nam\' at line 1')

39821

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s\'ka city council", "types": ["administrative_area_level_3", "political"], "shor\' at line 1')

09140

04208

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Azur", "types": ["administrative_area_level_1", "political"], "short_name": "Pro\' at line 1')

22041

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s Crossroads", "Falls Church"], "geometry": {"location_type": "APPROXIMATE", "bo\' at line 1')

04233

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Azur", "types": ["administrative_area_level_1", "political"], "short_name": "Pro\' at line 1')

12560

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Olt", "Saint-Saturnin-de-Lenne"], "geometry": {"location_type": "APPROXIMATE", "\' at line 1')

07705

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'kyi district", "types": ["administrative_area_level_2", "political"], "short_nam\' at line 1')

06056

Traceback (most recent call last):
  File "dump_coords2db.py", line 33, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Azur", "types": ["administrative_area_level_1", "political"], "short_name": "Pro\' at line 1')

39766

48650

51442

02500

13849

16059

70360

98337

03743

20152

17087

37882

62890

61704

49424

06255

05059

56330

65710

96790

08201

41564

21771

31328

07310

05862

40475

72769

91107

08020

75209

81321

36255

64484

28054

74878

37228

96789

39094

65486

16255

36603

72662

39092

78404

22102

43468

01721

43066

75964

12566

39743

75964

12566

39743

15227

84033

61342

92374

22713

69001

08605

58761

91325

43609

27581

38850

23117

84305

85357

60431

02101

54165

25430

43566

02269

64861

20707

32937

10018

45176

35654

30170

48837

16914

70458

14111

33133

44628

28401

33764

89449

21774

21620

07039

04927

01300

28544

11768

18940

73507

30017

68133

02359

59441

49628

64086

Traceback (most recent call last):
  File "dump_coords2db.py", line 34, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s Summit", "Lone Jack"], "geometry": {"location_type": "APPROXIMATE", "bounds": \' at line 1')

92443

Traceback (most recent call last):
  File "dump_coords2db.py", line 34, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'kyi district", "types": ["administrative_area_level_2", "political"], "short_nam\' at line 1')

70570

00100

21773

02653

47989

85128

71720

61107

03826

77441

21619

Traceback (most recent call last):
  File "dump_coords2db.py", line 34, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s County", "types": ["administrative_area_level_2", "political"], "short_name": \' at line 1')

11231

90804

60458

16239

51450

83670

44839

60076

03354

45833

01747

94503

93647

27025

28412

03570

59843

29916

32767

49011

12513

21084

32347

54162

96019

63933

07720

55360

49336

15344

36532

22027

62618

34105

45612

30176

08873

43080

18617

06701

51301

48225

33805

06242

32976

96003

38764

53080

71852

54421

60957

91387

73121

60439

04359

45812

16441

36541

38631

63764

62442

34134

34465

81137

80612

25168

01947

18453

41094

63144

04062

45652

02005

73832

52632

66215

98148

26568

62863

87059

13074

62948

61603

03603

20724

29560

37711

05765

64056

11747

02340

32736

22660

39325

01863

07111

55080

25413

00612

23112

55051

82053

01748

50129

19312

49268

15829

24184

28704

44427

32097

03866

14720

93610

33876

61068

61282

75350

28384

06798

62535

32159

12051

13417

95627

46393

30656

36575

94801

01208

03506

41257

23236

03279

80864

66835

60119

63146

37878

53103

07332

03900

47638

92647

50230

12064

33317

76641

56338

85284

84643

54234

29564

05602

39837

46037

14820

79703

36046

68030

82609

49070

33436

47561

95236

95446

17086

58722

06417

28360

45805

90606

01938

38754

31620

08853

01510

99167

30238

41332

48064

32697

17938

37336

41615

01969

28306

22701

58075

02812

26619

89440

47715

97205

36866

99124

57701

28411

35578

35673

06057

11581

37394

63117

66109

71653

37830

36530

12581

75831

60419

56052

84606

46112

93726

60531

13904

13072

27962

42204

06756

45014

33138

10590

01744

02453

08010

94555

05650

28115

70576

07737

43017

07977

29316

17508

50072

37811

93219

04258

29322

48177

27248

60428

15241

08361

91344

52347

22310

76651

75436

26623

21756

02189

29928

76008

98580

82732

51510

08340

33134

33809

80027

46375

94541

62428

52746

45746

93646

93612

89423

54302

18812

88231

64060

49022

03447

18504

55310

17980

31794

45690

35672

74053

29690

35022

77372

91351

17240

63112

33012

62265

63670

54420

19604

60942

71752

43802

44504

07424

97530

63349

30735

45227

17821

97210

25411

38857

30143

20732

78655

28343

11233

64030

76556

64119

48183

18354

60187

75401

11224

92240

93242

72937

28349

28711

36477

08035

26238

25855

50032

64836

85602

31634

69352

12207

76449

48502

06269

63106

70460

64034

56515

60636

13160

50220

01741

78056

03000

71486

03582

43046

87319

31062

94089

78252

05679

01583

12534

04175

Traceback (most recent call last):
  File "dump_coords2db.py", line 34, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Azur", "types": ["administrative_area_level_1", "political"], "short_name": "Pro\' at line 1')

45669

23340

76701

43137

84714

08855

58501

54734

13159

12779

08401

30124

35233

20763

18834

46992

53012

06906

31826

40203

19015

50271

37069

08866

44509

03842

59327

92845

78205

47172

31773

07105

53531

41776

99101

49712

15963

33701

40026

48039

01923

18431

18343

46524

81632

95605

17236

07704

70653

45067

14840

48759

25234

92807

03249

53129

65051

38866

45775

07015

75039

77616

41348

20692

Traceback (most recent call last):
  File "dump_coords2db.py", line 34, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s County", "types": ["administrative_area_level_2", "political"], "short_name": \' at line 1')

49774

38751

45317

01880

92617

62208

49770

63431

03053

06384

77369

45303

01506

00125

43462

20855

45628

33617

54526

37083

07853

71483

90059

97111

40150

77611

87046

12407

67520

21211

86507

12090

10570

28708

43779

45140

02356

83713

46403

97055

78385

05830

24137

27847

53227

90805

96743

12472

46706

16114

14604

12125

75490

47433

60466

98512

11692

29437

57363

68505

85120

46216

85193

19904

85304

41557

69361

21228

95136

60416

30474

68033

33462

50156

05843

22742

06374

66439

27502

02927

62626

37709

16346

54005

44451

04530

58301

42234

97463

94107

15642

33137

37037

45370

11566

34956

35218

05350

48813

26559

46122

00101

72633

03868

17024

98829

54475

00971

01342

61334

01123

23832

34604

32931

14527

66204

14220

23696

28396

92394

27845

29550

76632

11552

41267

26259

62650

26836

03865

61821

93105

17930

32626

40175

05477

50248

05523

08049

18327

30040

06796

16148

66619

49330

46115

78114

83669

41129

60628

33777

13040

11742

39564

19956

07218

19090

12776

28387

00265

78026

40499

56537

66104

01040

45005

60805

19096

65566

24148

89005

24590

79005

08540

93256

76634

39039

47042

34436

22307

07936

34231

55435

35802

94501

24256

04975

07031

17329

55037

02906

15218

70438

23833

26335

16802

62526

77480

62932

90275

63866

93725

46723

45240

95333

93654

85554

64098

52349

07055

00611

02630

83631

08059

39462

22031

27559

84004

11751

44620

74871

28128

76951

62269

Traceback (most recent call last):
  File "dump_coords2db.py", line 34, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Fallon", "Shiloh"], "geometry": {"location_type": "APPROXIMATE", "bounds": {"nor\' at line 1')

57043

15237

02102

00714

80202

95694

35187

54457

28622

08836

10973

33128

28098

08402

23417

45065

68123

33441

60487

60465

28469

70068

80523

70807

44802

97068

26438

79904

65650

98230

77518

71350

89828

41513

10038

76354

37601

45308

27806

32440

83228

80127

28356

30562

98354

22312

01603

22042

11976

47977

33414

76357

78207

12155

27813

64126

86538

52040

23847

26146

62293

43950

07494

37370

41503

06032

17362

75440

80109

88340

46845

37023

15202

66054

51357

67341

16881

77868

26851

18321

17324

11436

92703

39576

78669

78628

84328

46110

02010

72660

43468

61111

47803

77521

98826

98502

83501

72150

68520

76093

53546

67111

62684

31632

35474

15848

07041

74456

00736

70032

61705

52756

19152

66866

46157

54537

04253

13794

26431

27892

08260

58072

07828

19606

75641

00936

55102

16901

83025

43380

Traceback (most recent call last):
  File "dump_coords2db.py", line 34, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Allier"], "geometry": {"location_type": "APPROXIMATE", "bounds": {"northeast": {\' at line 1')

94706

76266

43973

29620

22534

68061

97540

90670

85324

41006

08028

34563

05663

11942

89074

05903

62012

71730

45810

03256

07432

14731

25132

90247

03574

55409

46147

12822

29801

52803

38627

19968

63102

91307

37066

74868

62204

06758

08054

01450

78666

93650

30285

06241

53549

35210

43449

94065

36279

66226

35614

95012

70043

01913

80534

05842

60056

87144

12092

30187

08019

85131

48054

07753

10501

99139

11364

11204

12160

55395

49325

78230

24361

72833

18250

78028

44420

66209

30426

72076

48049

57032

32696

54909

78118

77316

15232

76064

02157

90706

78676

07260

76693

15902

35213

83118

76247

00782

22657

14435

22835

07522

06704

04349

03244

60188

87415

41139

07816

78044

07040

54519

32798

29018

20814

63121

33602

29469

89131

19801

52241

31033

93656

61877

29841

36258

43102

46180

36269

54545

06759

29069

33119

54106

47987

06365

76055

33956

84520

29645

98126

04071

01612

00605

85339

07723

95125

92561

05860

72315

64730

94610

01905

92114

39421

68058

11020

84039

09400

04481

25573

12062

72623

44251

70086

21028

11510

41653

45342

90249

84713

71369

48371

68642

55057

12057

01929

60961

27050

36527

26563

26726

33935

67748

75438

37887

71861

23435

29611

33455

35409

98443

19078

13484

01436

14719

15928

00681

98010

56373

94523

33852

63941

06716

12586

03048

50250

20603

08524

Traceback (most recent call last):
  File "dump_coords2db.py", line 34, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'ka Slobidka", "types": ["locality", "political"], "short_name": "Motovylivs\'ka S\' at line 1')

08027

50444

44707

72332

84637

14837

30185

02893

07670

94502

76135

75411

38571

37347

38201

58078

73742

50517

00219

85054

30572

19454

66857

17953

48218

14063

19102

30535

14136

60184

76645

17006

46530

18355

23805

90713

37724

99166

63361

03288

49442

26250

66103

90045

02916

33541

04457

08859

35954

38375

12023

38558

01262

08551

05871

26847

26338

36116

06070

45215

36853

45152

78160

48615

23872

77474

41754

95225

73116

14733

28605

12846

47303

89503

76950

76904

03042

48626

21239

70734

80501

47970

30260

68512

82721

76689

12405

29926

97413

48840

55413

12927

97702

26254

32949

08741

21801

14208

75901

50262

63139

46052

43440

74350

31972

80228

83123

Traceback (most recent call last):
  File "dump_coords2db.py", line 34, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Azur", "types": ["administrative_area_level_1", "political"], "short_name": "Pro\' at line 1')

79911

36910

27565

17814

42061

38567

37180

73150

00674

39361

01237

58368

78055

37322

81325

63060

30464

06482

00977

77632

33401

33947

10916

06096

92679

49418

33974

19355

07024

99116

85753

Traceback (most recent call last):
  File "dump_coords2db.py", line 34, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'kyi district", "types": ["administrative_area_level_2", "political"], "short_nam\' at line 1')

98501

21034

07524

60153

62649

03307

75237

23436

91935

79036

90524

49236

58653

44428

71109

31052

28097

43467

29349

59086

71845

83641

10962

38556

62289

23441

37050

91789

70426

94607

70047

12861

71301

60526

06754

89506

46784

94621

30182

98408

36455

44278

55101

12122

37931

50223

96732

25088

37174

95116

76525

48386

24432

33708

04239

40965

50171

29212

42025

80128

75236

62837

74066

09920

42445

90010

16051

54011

08831

42041

99326

15690

12804

30733

56060

47012

29812

03742

95354

12503

06409

76621

76148

84329

00121

71075

45890

95008

27846

01868

03887

55077

61016

95051

32124

98030

18302

36612

13461

08305

10964

04224

00685

86502

90017

85712

70802

74753

21136

08195

78022

97213

46311

36088

84027

48375

01391

91350

98303

20695

16849

92084

60098

47567

43740

26711

06300

Traceback (most recent call last):
  File "dump_coords2db.py", line 34, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Azur", "types": ["administrative_area_level_1", "political"], "short_name": "Pro\' at line 1')

07863

02780

92126

46730

17954

14481

01095

14536

93022

53405

41774

47368

02554

60629

20117

77580

98108

24598

40165

95014

37086

89179

05346

84051

55420

71295

35074

82401

91701

11797

06441

36553

40390

32417

88201

04401

63546

65081

60518

40299

44092

29727

70124

80305

18614

92618

30256

46051

74965

09263

95035

48732

60941

99034

24343

15066

40019

01119

37122

96701

11963

75929

61851

17754

89442

14549

50158

76437

02041

97269

19061

30536

44902

77357

92124

30054

12446

24879

70466

95476

79928

70053

49534

47112

44281

09505

03034

11365

71303

75570

61760

20208

07109

96141

12461

18241

63700

48817

26763

10112

20677

35119

34609

08867

37642

60521

28079

60426

47024

81082

61230

04965

74041

36564

89102

95965

13143

06164

73169

44047

95472

62522

29681

84784

75119

18016

07645

23430

64150

76164

37650

48842

39354

19405

46561

80304

24607

37412

29423

37415

52310

12548

95338

39346

18903

16844

74735

39067

28480

20852

07722

68131

07206

16423

49098

12737

47115

63501

97054

41647

15958

60640

40121

23086

56071

75851

76849

44223

63109

92504

24019

93307

12745

68731

02709

20037

50843

61526

34758

18445

16433

46350

07748

77904

90732

20751

75925

37665

23551

24401

08029

49265

91504

37694

74724

35130

98106

64763

20903

63833

20634

Traceback (most recent call last):
  File "dump_coords2db.py", line 34, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s County", "types": ["administrative_area_level_2", "political"], "short_name": \' at line 1')

06708

02346

73834

11764

16125

78942

27896

68413

14005

02458

04957

99709

01950

13203

09701

Traceback (most recent call last):
  File "dump_coords2db.py", line 34, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'kyi district", "types": ["administrative_area_level_2", "political"], "short_nam\' at line 1')

24816

43547

78838

46406

43030

19022

17554

29843

04927

34695

40806

81907

95110

94109

01201

00790

76301

20017

10541

60560

39455

32331

83122

83536

07076

43976

01949

99006

74935

66712

35906

13439

62242

09016

66050

92131

23888

91913

12932

22206

36453

63624

07068

28163

12428

95050

04416

52577

28673

27954

13338

05770

03018

80301

92009

23601

14033

68526

29379

90069

67223

46979

27804

84044

44136

93591

28478

15906

07821

30739

02754

67490

65722

24745

20706

Traceback (most recent call last):
  File "dump_coords2db.py", line 34, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'s County", "types": ["administrative_area_level_2", "political"], "short_name": \' at line 1')

45371

37640

70070

33703

55014

17064

16038

07516

31411

32703

05906

41571

07874

03741

06037

83451

37079

03983

18066

29033

63050

08026

02474

14098

54173

08089

78577

04983

03600

40865

27299

36574

13327

04436

45069

05011

Traceback (most recent call last):
  File "dump_coords2db.py", line 34, in <module>
    cursor.execute(sql)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 226, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler
    raise errorvalue
ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'Azur", "types": ["administrative_area_level_1", "political"], "short_name": "Pro\' at line 1')

70452

56239

53235

84783

46218

02493

03380

74370

03031

10464

55060

48847

21770

41645

17038

43204

06112

60558

19341

92010

17603

66205

41141

37416

73463

14822

01067

35214

66220

76309

98671

91453

05178

20710

21638

13054

69620

91453

05178

20710

21638

13054

69620

06000

58320

20747

20745

87241

39821

04208

22041

04233

12560

07705

06056

39766

48650

51442

02500

13849

16059

70360

98337

03743

20152

17087

37882

62890

61704

49424

06255

05059

56330

65710

96790

08201

41564

21771

31328

07310

05862

40475

72769

91107

08020

75209

81321

36255

64484

28054

74878

37228

96789

39094

65486

16255

36603

72662

39092

78404

22102

43468

01721

43066

75964

12566

39743

15227

84033

61342

92374

22713

69001

08605

58761

91325

43609

27581

38850

23117

84305

85357

60431

02101

54165

25430

43566

02269

64861

20707

32937

10018

45176

35654

30170

48837

16914

70458

14111

33133

44628

28401

33764

89449

21774

21620

07039

04927

01300

28544

11768

18940

73507

30017

68133

02359

59441

49628

64086

92443

70570

00100

21773

02653

47989

85128

71720

61107

03826

77441

21619

11231

90804

60458

16239

51450

83670

44839

60076

03354

45833

01747

94503

93647

27025

28412

03570

59843

29916

32767

49011

12513

21084

32347

54162

96019

63933

07720

55360

49336

15344

36532

22027

62618

34105

45612

30176

08873

43080

18617

06701

51301

48225

33805

06242

32976

96003

38764

53080

71852

54421

60957

91387

73121

60439

04359

45812

16441

36541

38631

63764

62442

34134

34465

81137

80612

25168

01947

18453

41094

63144

04062

45652

02005

73832

52632

66215

98148

26568

62863

87059

13074

62948

61603

03603

20724

29560

37711

05765

64056

11747

02340

32736

22660

39325

01863

07111

55080

25413

00612

23112

55051

82053

01748

50129

19312

49268

15829

24184

28704

44427

32097

03866

14720

93610

33876

61068

61282

75350

28384

06798

62535

32159

12051

13417

95627

46393

30656

36575

94801

01208

03506

41257

23236

03279

80864

66835

60119

63146

37878

53103

07332

03900

47638

92647

50230

12064

33317

76641

56338

85284

84643

54234

29564

05602

39837

46037

14820

79703

36046

68030

82609

49070

33436

47561

95236

95446

17086

58722

06417

28360

45805

90606

01938

38754

31620

08853

01510

99167

30238

41332

48064

32697

17938

37336

41615

01969

28306

22701

58075

02812

26619

89440

47715

97205

36866

99124

57701

28411

35578

35673

06057

11581

37394

63117

66109

71653

37830

36530

12581

75831

60419

56052

84606

46112

93726

60531

13904

13072

27962

42204

06756

45014

33138

10590

01744

02453

08010

94555

05650

28115

70576

07737

43017

07977

29316

17508

50072

37811

93219

04258

29322

48177

27248

04175

20692

62269

43468

43380

08524

83123

85753

06300

20634

09701

04927

20706

05011

92201

02208

95425

30137

26143

37377

29388

02601

01306

33709

90003

11236

28071

68117

15931

41839

14057

94515

31801

18439

98055

44021

41076

35504

91744

10968

04444

24850

67230

75488

98033

53090

03461

58733

34289

04578

84620

15055

02829

50039

17016

04021

92705

59821

65631

78389

35223

25560

03233

46077

07481

35986

65017

44646

93648

62024

41650

98421

31094

53217

60637

97056

32779

71112

24226

44254

45844

20712

94602

90043

42633

80504

17406

48421

14085

00786

76649

27829

63036

43840

21154

75143

04210

54155

77951

76087

48829

50138

36312

43067

83443

65740

01431

06013

62231

64136

97317

20817

24657

98264

49690

36750

19009

27617

48001

25606

40828

97035

81427

63134

98813

45315

14143

16214

16948

45891

89145

64454

01921

20901

01104

63826

98396

38851

24381

92321

37355

97381

78959

49783

39347

26534

06043

43906

24981

66713

03266

22728

76653

82072

70067

84014

03766

68025

39661

25261

05089

13778

48441

34207

95391

56044

35085

03039

18256

80921

02740

36456

30677

10002

63456

03632

60201

23030

35646

98200

67671

15027

03401

78248

11949

37658

04347

09561

15122

28448

70121

19734

26266

38941

92867

48890

68701

41075

56091

28033

45040

73127

04024

60966

06237

33334

18847

92108

92106

75656

23072

17370

18045

80435

10075

52656

04969

12786

04371

49306

11518

75780

97042

23937

21678

09114

98932

54880

74047

98335

30828

76460

16116

05677

07728

13206

62301

11417

20759

14228

63901

77076

38376

74036

29048

33616

84090

94951

76673

35051

08609

60436

19444

35226

24915

86047

45861

65661

98685

06460

60189

80247

11419

38848

15102

97221

30322

25678

67607

37012

28645

60617

29921

61252

75765

93280

83262

98136

07644

30669

03290

97377

42044

75421

28722

28516

55104

01003

97331

77541

07220

66413

67553

17922

11415

30641

08518

20187

16943

56080

28650

75977

95148

65452

92225

23603

85711

01606

48836

24350

16374

10172

07662

20194

53572

12176

35593

00683

75939

29810

49078

03237

75246

24070

02184

18069

30337

48059

31639

14897

28367

17543

02567

92883

46550

92555

11755

28681

41649

25141

77551

72941

93455

15522

36474

61425

14212

87544

12726

11730

03773

75180

05069

79109

54722

61114

49256

02338

37863

72933

19320

12223

43608

36482

60919

75409

28320

63379

16922

97431

93023

30147

12920

15711

45897

98558

55396

11530

98923

94133

57702

04030

60630

12150

19967

60064

46322

37148

97140

63303

92003

55322

05061

53205

60511

39191

60631

44626

30566

01519

57218

02464

45226

37738

10537

75156

98844

11789

66414

23176

74079

12115

30823

75844

84747

30453

26346

92562

07033

63016

79101

06021

92833

64734

50225

31605

08857

15108

15762

43968

88230

46725

26167

10931

14826

23504

36432

33415

71753

07746

93534

44491

34490

18210

56520

94704

68510

45242

99517

07087

46163

26253

89835

28115

24503

49858

48035

93202

03818

80108

28347

97045

04027

33175

35045

09096

11234

49037

39532

61440

72742

10460

01368

74848

21076

20143

18508

51532

16323

15059

92127

82939

48822

56251

76132

78839

72326

40353

75751

02482

13801

22508

93313

73002

25510

96779

49277

27252

74963

18246

31304

04353

73453

19041

50115

32190

00973

26412

33321

22153

25019

01009

01106

13303

38237

34676

24549

38966

78957

85749

17538

79830

01056

29050

60827

75850

55359

03448

75159

03825

08620

44699

05156

27607

19973

04572

49058

65325

04614

38363

63565

50588

03007

91901

62321

26038

24862

18033

31563

77808

46767

32055

43971

61616

02864

06561

78259

33944

04055

28642

01441

50257

13112

26278

03245

41855

31907

03029

45030

48105

43113

33715

02748

97394

54770

80126

78338

04956

37311

11477

31721

00616

28454

75650

40447

17778

36032

43952

67637

76823

22645

12022

09132

98812

27612

63052

31523

33898

17043

45402

22824

74055

44273

46933

56072

94549

51575

23169

27871

48756

33615

46058

75503

48430

46250

07504

20872

94901

80549

98672

32962

44102

27006

43447

03306

80924

50228

87316

45424

18447

73107

29655

04469

18630

03043

38063

49254

84324

15360

44117

36870

98848

31641

43614

30125

02472

03907

13061

28465

23114

31331

48885

20613

17093

92596

18360

84761

02067

08512

12750

77547

50071

15116

26627

26833

91911

49428

04520

00624

30326

46069

49349

60106

28690

91722

65548

38052

50548

81428

20111

71859

40509

38620

20772

58843

68137

31953

01902

92706

41539

40409

56376

84315

33143

18822

39756

18517

48098

49342

91739

31315

98390

14591

48079

02494

10031

39456

05320

47041

77331

48198

37375

14059

83637

83810

30537

65712

45238

49707

47562

66777

85623

29568

39664

66735

99122

58781

33712

99502

01757

27869

60491

67432

38833

06807

55902

95834

01752

40847

65767

77010

22664

28740

96725

08047

63384

95366

31008

41666

85607

53576

50239

16925

63137

06098

04694

22209

74006

28405

95690

48092

04841

80447

44041

01532

16063

07081

97027

78741

88008

46259

47272

15323

30452

66002

52659

04435

32110

80816

36784

74349

95002

75158

23075

93001

54025

60470

60551

39114

44099

29626

94123

95650

78370

49339

21910

05516

71417

00333

10305

36571

94571

44321

57301

83239

29335

16503

77386

77050

10801

45804

33314

56601

21755

87121

43211

43522

45715

06060

97101

71302

51439

50020

30071

93619

27020

55444

73131

75402

61536

04354

01776

29161

21723

87305

77385

34217

43844

44095

45654

50566

56683

46303

31044

03258

40370

02540

14530

19094

21205

72959

46142

28771

63113

73542

83654

07022

75645

91343

32423

89036

37692

14001

02761

02054

60192

45204

19474

43837

95209

35042

44658

63120

71115

46711

13620

30521

77703

36351

02418

64147

96826

29817

55992

21657

67335

38843

06442

02809

92663

34448

28804

53038

05444

53536

54007

15063

66102

36305

53404

10598

67031

56282

89027

75605

12827

17264

93292

06710

22503

81700

47246

78102

30666

10941

15019

16927

19567

08100

70634

06484

27592

85344

41535

03055

29593

98112

07721

05257

95982

50702

08740

51573

07018

09904

29840

13044

49064

15320

04236

22151

85925

42740

39090

84341

01629

46526

52626

62896

53017

07739

72112

98232

21532

63133

60659

74365

28439

62285

26739

63645

35034

78586

84055

98584

56081

27522

03781

31778

31089

10013

70754

28530

71220

02838

20902

49322

01017

14211

00918

69341

90049

39358

11709

85714

33054

19954

72841

43571

61074

53555

46128

30072

78363

07058

83870

20904

68046

36451

13146

56078

84657

28731

37031

61455

07060

55329

92886

16915

56074

19971

45167

19074

50571

73033

37020

84633

63105

36343

35541

33841

02155

46394

50613

99022

52411

11418

68970

13440

22548

92316

49525

60137

09000

11514

65653

17847

56316

35570

80488

31707

11787

83604

45177

80227

52801

90603

37886

55129

77448

43344

11370

05851

05149

43730

02715

35581

17860

74361

75013

25106

28344

28466

36320

77311

02953

53925

28585

14871

60151

14304

90006

98563

06114

50540

95686

44056

76252

61738

11575

29030

82945

71842

62067

15214

87323

18254

34947

12564

07066

06418

73025

93268

38552

44133

95838

18032

20746

89183

98057

46701

45506

07079

71328

63351

08221

60621

22306

68410

70359

08066

06456

21216

46126

52748

19701

08404

71104

01129

02865

47834

78387

87109

28431

02131

61540

33613

84752

41655

98027

33129

32305

29369

09233

39406

92268

14782

48657

03033

91768

16335

16232

64504

64468

70737

86510

47441

37340

26133

15672

43948

54205

20166

66521

21078

19934

03230

98934

43105

95638

23089

16055

44495

86338

27808

95330

44405

60435

05386

92868

43908

07605

04093

06232

24290

00961

63432

72370

04974

48306

18331

19702

48040

84061

28078

33431

75944

24490

89508

92595

19343

37013

35974

75647

74578

53094

95139

16223

67701

79549

04053

05737

02878

20640

92662

18612

98422

00738

10918

42701

50275

43044

55416

07843

27562

84318

12493

33182

10804

31807

14845

15022

05762

94556

48832

14058

07027

54140

19511

48834

08852

49305

02835

77530

50441

73179

71101

21120

76020

01515

70401

44128

04350

34286

75109

27278

00422

32811

90701

12440

45653

71763

45241

07514

30135

44026

73139

94572

33446

01116

49404

67851

40204

17872

33426

04084

76687

92587

67444

48888

08326

43567

70131

63026

14012

75708

76050

68466

16153

32180

19083

92008

07837

78140

07506

30534

27571

50058

60556

18435

48240

77591

05473

28088

58558

75756

25571

39111

84108

04254

16010

43045

06613

17758

60181

60430

25245

07832

65753

25826

04479

07208

44401

08097

77519

48093

07403

23294

62014

05777

73162

36022

08306

13630

53074

35035

26845

74129

76538

10023

64843

11369

48504

65747

36319

05150

26525

83114

85544

49266

37365

28526

24550

99156

60172

18509

13407

02072

28714

28133

05757

16146

22627

30668

41804

84310

04117

90715

17327

29842

54495

61104

11796

90742

02818

80611

85901

48117

32094

05081

38255

26801

10308

07738

70443

16933

23860

30563

55732

56028

32427

01604

45841

40361

15770

56580

91301

36024

30259

44449

73707

30082

45205

56149

61265

61256

12838

11714

36353

02026

28787

61610

68366

37118

78589

35592

85546

19560

30241

14787

92055

11968

83245

40807

33838

61417

94513

90810

29365

95448

34433

15668

84337

11104

14550

26169

30183

19541

13211

37186

36925

82930

46224

53520

98645

04015

07005

01220

67871

43220

80530

05483

03084

24269

18055

65648

48356

98107

29541

01585

35757

82834

00953

55318

47848

98198

13411

75938

83210

45849

95726

52726

04209

93940

19504

07063

03109

48846

19525

83013

08500

52637

38929

33125

44214

28134

98022

86036

05032

50054

15550

15330

25142

76631

61486

31833

68333

26621

43504

10456

19401

08070

49228

83203

51461

39108

85133

71647

03774

87106

91040

13309

08061

36256

76445

45898

20853

93449

41640

84319

78516

72865

30631

11703

84701

47031

24013

48192

70116

84725

11791

18109

97136

37645

45377

30477

32008

18426

17851

21051

78610

78260

67525

75790

39356

40740

30180

92395

06762

34222

28207

97378

32082

55741

06113

39192

43761

40228

10546

07111

43553

48239

75433

35209

33612

92648

68434

06510

02830

08009

45814

78940

18428

01255

46797

28025

78154

13733

34786

36526

79938

48309

46150

12084

17302

85137

29650

30673

38730

70757

81424

75571

38251

07745

02704

34608

03612

39169

06382

03740

48450

98855

56111

12475

46776

35126

19127

10603

55397

91702

41231

63332

13135

63357

73632

65285

38943

30104

29372

94305

53021

84908

76853

19137

94117

77533

44688

47130

32060

99516

62036

06845

47601

33598

25520

93907

31320

48438

78732

78659

23233

05060

28584

72376

26764

05100

45886

91745

76462

21043

74011

28443

46013

20608

07020

15431

27958

12546

07401

95829

22202

11731

55976

58768

12083

56085

20720

04441

14480

54977

15473

66070

16150

39217

37870

66856

80911

77489

12962

03217

00925

43534

07001

00623

62379

11550

08225

77082

39074

48167

13357

19027

50011

94132

89521

01355

75135

27341

86413

11931

80214

83850

33594

19120

40220

92130

27027

46221

41472

41828

04461

80215

83855

20659

49403

26234

90717

18232

05829

19046

92223

86046

28375

37015

29072

48025

35652

64491

39069

02919

80443

03446

93063

51231

23401

17952

30213

84124

01876

54981

08554

16947

13665

36310

75492

01100

30650

44609

75134

42202

32909

00802

03110

13460

10606

07452

75969

43013

15216

63701

68130

15301

64465

48638

07823

68305

92028

62450

07016

49040

78382

37323

51467

04563

96761

75704

32829

19002

44618

54443

13305

18224

12147

37938

02911

44139

76710

83244

24219

02745

12883

43077

24216

65560

70638

54470

37615

12433

44637

24945

65201

77401

95501

04357

60424

41566

44844

78881

66224

34228

98860

30705

90290

71006

31410

48320

19808

30354

93041

24574

16865

04002

44142

48848

60475

14227

02744

98282

62010

73084

46237

37142

02602

05303

17853

77466

36344

85750

11901

15234

95973

85539

48157

96712

94552

34145

28666

45232

95060

83427

21635

64129

19607

70075

45107

32459

55614

07242

20057

27807

73838

33993

74131

35204

74050

70719

02664

58001

00627

13752

77002

43920

85145

08918

22737

90026

38828

76039

33525

82501

96707

72211

07463

26039

78024

12533

51446

43526

78001

47373

90723

04041

77619

20737

66042

45070

43443

57246

56353

53210

22640

15801

04276

23883

12068

66083

21629

33165

51444

54416

52065

91932

47342

38650

06880

53037

18419

68132

04382

11553

55063

97230

11565

15321

77554

97062

38801

70372

85031

60040

80459

92119

02176

92342

27028

55744

97477

72019

98836

28651

36606

40023

36581

07622

71360

65707

02896

25670

50107

43320

21071

11433

31015

79764

12790

25276

14004

07838

93277

95827

81524

19141

21613

77079

54023

02719

61523

10708

76567

80521

74571

12422

74748

07030

89060

40374

79401

70079

85310

34450

77571

43009

44890

35006

89014

